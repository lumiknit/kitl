@use "sass:list";
@use "sass:map";
@use "sass:math";

/* Color and size definitions */

$flow-color-bg: #fff;
$flow-color-selected: #1697dc;
$flow-color-fg: #363d47;
$flow-color-def: #b00279;
$flow-color-beta: #5d5652;
$flow-color-lambda: #db5614;
$flow-color-literal: #085ed7;
$flow-color-comment: #46923c;

$flow-node-colors: (
  bg: $flow-color-bg,
  fg: $flow-color-fg,
  def: $flow-color-def,
  beta: $flow-color-beta,
  lambda: $flow-color-lambda,
  literal: $flow-color-literal,
  comment: $flow-color-comment,
);

$flow-edge-colors: (
  default: $flow-color-fg,
  beta: $flow-color-beta,
  lambda: $flow-color-lambda,
  literal: $flow-color-literal,
  selected: $flow-color-selected,
);

$flow-node-corner: 0.125rem;
$flow-node-corner-deep: 0.5rem;

$flow-line-width: 0.08rem;
$flow-handle-size: 0.5rem;
$flow-handle-br-size: 0.5rem;
$flow-handle-br-width: 0.2rem;

/* Pre calculated */

$flow-handle-off: math.div($flow-handle-size + $flow-line-width, 2);
$flow-handle-br-offset: math.div(
  $flow-handle-br-size - $flow-handle-br-width,
  2
);

/* Node shape */

.react-flow__node {
  min-width: 1rem;
  min-height: 1rem;
  padding: 0.3rem 0.4rem;

  font-family: sans-serif;
  font-size: 1rem;
  text-align: center;
  line-height: 1;

  background-color: rgba($flow-color-bg, 0.8);
  /*backdrop-filter: blur(0.1rem);*/
  transition: box-shadow 0.1s ease-in-out;
}

.react-flow__node-def {
  color: $flow-color-def;
  border: 0;
  border-top: $flow-line-width solid $flow-color-def;
  padding: 0.1rem 0.5rem;
}

.react-flow__node-beta {
  color: $flow-color-beta;
  border: $flow-line-width solid $flow-color-beta;
  border-radius: $flow-handle-br-size;
}

.react-flow__node-lambda {
  color: $flow-color-lambda;
  border: $flow-line-width solid $flow-color-lambda;
  border-radius: $flow-node-corner;
  border-bottom-right-radius: $flow-handle-br-size;
}

.react-flow__node-literal {
  color: $flow-color-literal;
  border: $flow-line-width solid $flow-color-literal;
  border-radius: $flow-node-corner-deep $flow-node-corner $flow-handle-br-size
    $flow-node-corner;
}

.react-flow__node-comment {
  font-family: serif;
  font-size: 0.75rem;
  max-width: 20rem;
  color: $flow-color-comment;
  background: rgba($flow-color-bg, 0.5);
  border: 0;
  border-left: 4px solid $flow-color-comment;
  border-radius: 0;
  padding: 0.1rem 0.2rem;
  text-align: left;
}

.react-flow__node.selected {
  box-shadow: 0 0.1rem 0.4rem rgba($flow-color-fg, 0.5);
}

/* Handles */

.react-flow__handle {
  width: $flow-handle-size;
  height: $flow-handle-size;
}

@each $_, $pos in (left: left, top: top, right: right, bottom: bottom) {
  .react-flow__handle-#{$pos} {
    #{$pos}: -$flow-handle-off;
  }
}

.react-flow__handle {
  transition:
    border-width 0.1s ease-in-out,
    border-color 0.1s ease-in-out,
    box-shadow 0.1s ease-in-out;
}

.react-flow__handle.connecting {
  border-width: calc(2 * $flow-line-width);
  outline: 0.0625rem dashed $flow-color-selected;
  outline-offset: 0.125rem;
}

@mixin flow-handle-border-color($style, $fg, $bg) {
  @if $style == in {
    border-color: $fg;
    background-color: $bg;
  } @else {
    border-color: $bg;
    background-color: $fg;
  }
}

/* Handle definitions */
@each $kind in (in, out) {
  @each $key, $color in $flow-node-colors {
    .flow-handle-#{$key}-#{$kind} {
      border-width: $flow-line-width;
      border-style: solid;
      @include flow-handle-border-color($kind, $color, $flow-color-bg);
    }
  }
}

@each $key, $color in $flow-node-colors {
  .flow-handle-border-color-#{$key} {
    border-color: $color;
  }
}

.flow-handle-ret {
  left: calc(100% - $flow-handle-br-offset);
  top: calc(100% - $flow-handle-br-offset);
  transform: translate(-50%, -50%);
  width: $flow-handle-br-size;
  height: $flow-handle-br-size;
  background-color: transparent;
  border-width: 0;
  border-right: $flow-handle-br-width solid;
  border-bottom: $flow-handle-br-width solid;
  border-radius: 0 0 100% 0;
}

.react-flow__handle.flow-handle-ret.connecting {
  box-shadow: none;
  border-width: 0;
  border-right: calc(1.5 * $flow-handle-br-width) solid;
  border-bottom: calc(1.5 * $flow-handle-br-width) solid;
  border-color: $flow-color-selected;
}

.flow-handle-hidden {
  opacity: 0;
}

/* Edge */

.react-flow__edge path.react-flow__edge-path {
  stroke: map.get($flow-edge-colors, default);
  stroke-width: 0.8;
  transition: stroke-width 0.1s ease-in-out;
}

marker.react-flow__arrowhead polyline {
  stroke: map.get($flow-edge-colors, default);
  fill: map.get($flow-edge-colors, default);
}

.react-flow__edge.selected path.react-flow__edge-path {
  stroke: map.get($flow-edge-colors, default);
  stroke-width: 1.6;
  filter: drop-shadow(0 0 0.25rem rgba($flow-color-fg, 0.75));
}

@each $key, $color in $flow-edge-colors {
  // Define edge colors
  .react-flow__edge-#{$key} path.react-flow__edge-path {
    stroke: $color;
  }

  .react-flow__edge-#{$key}.selected path.react-flow__edge-path {
    stroke: $color;
  }
}

/* Node body */

.flow-node-container {
  display: flex;
  flex-direction: row;
  align-items: start;
}

.flow-node-container-icon {
  font-size: 0.66rem;
  opacity: 0.5;
  font-weight: bold;
}

.flow-node-container-icon-lg {
  font-size: 1.2rem;
}

.flow-node-container-body {
  text-align: left;
  margin-top: auto;
  padding-top: 0.2rem;
  margin-bottom: auto;
  white-space: pre-wrap;
}

.flow-node-container-raw {
  font-family: monospace;
  font-size: 0.66rem;
  white-space: pre-wrap;
  word-break: break-all;
  margin: 0.2rem 0;
  text-align: left;
  overflow: hidden;
  max-width: 40rem;
}

/* Name Display */
.flow-name-display {
  display: inline-block;
  text-align: left;
}

.flow-name-display-name {
  font-size: 1rem;
}

.flow-name-display-module {
  font-size: 0.4rem;
  font-style: italic;
}

/* Other */

.flow-serif {
  font-family: serif;
}

.flow-node-dimmed {
  font-size: 0.75rem;
  opacity: 0.5;
}
